#!/usr/bin/env bash

# Rofi-based fish commands cheatsheet
# Replaces fish-help with consistent rofi styling

# Fish command data extracted from your fish configuration
# Format: "Type Command - Description"
COMMANDS=(
    "<span color='gray'><i>System Commands:</i></span>"
    "<b>🔄 sys-commit-rebuild</b>  <i>Commit changes and rebuild NixOS system</i>"
    "<b>🔄 sys-update-push</b>  <i>Pull, upgrade, commit and push system changes</i>"
    "<b>📋 sys-support-info</b>  <i>Copy system info to clipboard</i>"
    "<b>📋 sys-support-info-extended</b>  <i>Copy extended system info to clipboard</i>"
    "<b>🐞 sys-troubleshoot-last-boot</b>  <i>Upload last boot logs to pastebin</i>"
    "<b>📜 sys-logs-home-manager</b>  <i>Restart and show home-manager logs</i>"
    "<b>💻 sys-tailscale-up-laptop</b>  <i>Start tailscale for laptop mode</i>"
    "<b>🖥️ sys-tailscale-up-desktop</b>  <i>Start tailscale for desktop mode</i>"
    "<b>🔤 sys-font-cache-refresh</b>  <i>Refresh font cache</i>"
    "<b>🔤 sys-font-list</b>  <i>List all fonts</i>"
    "<b>📹 sys-get-video-id</b>  <i>Get video device IDs</i>"
    "<b>🌐 sys-get-ips</b>  <i>List network interfaces and IPs</i>"
    "<b>📖 sys-docs-nixcfg</b>  <i>Open NixOS configuration manual</i>"
    "<b>📖 sys-docs-home-manager</b>  <i>Open Home Manager manual</i>"
    "<b>🍎 sys-rebuild-mac</b>  <i>Rebuild macOS configuration</i>"
    ""
    "<span color='gray'><i>Nix Commands:</i></span>"
    "<b>🏗️ nix-build</b>  <i>Build NixOS config without switching</i>"
    "<b>🔄 nix-rebuild</b>  <i>Rebuild and switch to new NixOS config</i>"
    "<b>🧪 nix-test</b>  <i>Test NixOS config (dry run)</i>"
    "<b>⬆️ nix-upgrade</b>  <i>Update flake inputs and rebuild</i>"
    "<b>🔍 nix-store-find-file</b>  <i>Find file in active nix store [search-term]</i>"
    "<b>⚡ nix-run-ephemeral</b>  <i>Run a nixpkgs package temporarily [package-name]</i>"
    "<b>🔍 nix-pkg-search</b>  <i>Search nixpkgs for packages [search-term]</i>"
    "<b>🔍 nix-pkg-search-cli</b>  <i>Search nixpkgs via nix search [search-term]</i>"
    "<b>🧹 nix-lint</b>  <i>Lint nix files with statix</i>"
    "<b>ℹ️ nix-info</b>  <i>Display nix system information</i>"
    "<b>📇 nix-index-update</b>  <i>Update nix-index database</i>"
    ""
    "<span color='gray'><i>Kubernetes Commands:</i></span>"
    "<b>⚙️ k8s-set-config</b>  <i>Select kubeconfig file with fzf</i>"
    "<b>🏷️ k8s-set-namespace</b>  <i>Select kubernetes namespace with fzf</i>"
    "<b>🗑️ k8s-ns-delete-all-resources</b>  <i>Delete all resources in namespace [namespace]</i>"
    "<b>🔍 k8s-ns-find-stuck</b>  <i>Find stuck terminating resources [namespace]</i>"
    "<b>💀 k8s-ns-force-terminate</b>  <i>Force terminate stuck namespace</i>"
    "<b>📦 k8s-get-containers</b>  <i>List containers in pods by namespace [namespace]</i>"
    "<b>🛠️ k8s-setup-config</b>  <i>Setup kubernetes configuration</i>"
    "<b>☸️ k8s</b>  <i>kubectl with color support</i>"
    "<b>🔍 k8s-scan</b>  <i>Run rustscan in docker</i>"
    ""
    "<span color='gray'><i>File System Commands:</i></span>"
    "<b>🗑️ fs-remove-interactive</b>  <i>Find and remove files/dirs interactively</i>"
    "<b>🏗️ fs-nav-terraform</b>  <i>Navigate to terraform directory</i>"
    "<b>☁️ fs-nav-terraform-clusters</b>  <i>Navigate to terraform clusters</i>"
    "<b>📦 fs-nav-terraform-modules</b>  <i>Navigate to terraform modules</i>"
    "<b>✏️ fs-nav-terraform-edit</b>  <i>Navigate to terraform and edit</i>"
    "<b>❄️ fs-nav-nixcfg</b>  <i>Navigate to nixcfg directory</i>"
    "<b>📝 fs-nav-scratch</b>  <i>Navigate to scratch directory</i>"
    "<b>📷 fs-nav-screenshots</b>  <i>Navigate to screenshots directory</i>"
    "<b>🔍 fs-find-files</b>  <i>Find files with fzf and preview</i>"
    "<b>📋 fs-list</b>  <i>Enhanced ls with eza</i>"
    "<b>👁️ fs-list-all</b>  <i>Enhanced ls -a with eza</i>"
    "<b>🌳 fs-tree</b>  <i>Tree view with eza</i>"
    "<b>🌳 fs-tree-all</b>  <i>Tree view with hidden files</i>"
    "<b>💾 fs-disk-usage</b>  <i>Disk usage with dust</i>"
    "<b>⬆️ fs-nav-up</b>  <i>Go up one directory</i>"
    "<b>⬆️ fs-nav-up-2</b>  <i>Go up two directories</i>"
    "<b>⬆️ fs-nav-up-3</b>  <i>Go up three directories</i>"
    "<b>⬆️ fs-nav-up-4</b>  <i>Go up four directories</i>"
    "<b>📊 fs-ncdu</b>  <i>Interactive disk usage with gdu</i>"
    ""
    "<span color='gray'><i>Development Commands:</i></span>"
    "<b>✏️ dev-edit</b>  <i>Open editor (helix)</i>"
    "<b>❄️ dev-edit-nixcfg</b>  <i>Open nixcfg in editor</i>"
    "<b>💻 dev-edit-vscode-nixcfg</b>  <i>Open nixcfg in VSCode</i>"
    "<b>🐙 dev-git</b>  <i>git command</i>"
    "<b>🐳 dev-docker</b>  <i>docker command</i>"
    "<b>🐳 dev-docker-compose</b>  <i>docker compose command</i>"
    "<b>🚀 dev-git-commit-push</b>  <i>Pull, add, commit and push changes</i>"
    "<b>📊 dev-process-list</b>  <i>Enhanced process list with procs</i>"
    "<b>❓ dev-help</b>  <i>Get help with tldr</i>"
    "<b>📊 dev-top</b>  <i>System monitor with btop</i>"
    "<b>📡 dev-ping</b>  <i>Enhanced ping with gping</i>"
    "<b>📄 dev-yaml-viewer</b>  <i>View YAML files with jless</i>"
    "<b>🪟 sys-get-wm-class</b>  <i>Get window manager class for GNOME</i>"
    "<b>🪟 sys-get-hypr-class</b>  <i>Get window class for Hyprland</i>"
    "<b>🧹 dev-jlint</b>  <i>Lint nix files with tab completion [file.nix]</i>"
    "<b>✅ dev-jcheck</b>  <i>Check nix file syntax [file.nix ...]</i>"
    "<b>📥 k8s-download-kubeconfig</b>  <i>Download kubeconfig from remote server [ip] [cluster-name]</i>"
    ""
    "<span color='gray'><i>Application Commands:</i></span>"
    "<b>📝 app-scratch-new</b>  <i>Create new scratch note with template</i>"
    "<b>📚 app-scratch-browse</b>  <i>Browse scratch notes with glow</i>"
    "<b>🔐 app-onepass-fzf</b>  <i>Browse 1Password items with fzf</i>"
    "<b>📱 app-send-to-phone</b>  <i>Send file to phone via tailscale</i>"
    "<b>🎬 app-mpv-youtube</b>  <i>Play video with mpv</i>"
    "<b>📋 app-pueue</b>  <i>Task queue manager</i>"
    "<b>☸️ app-kubitect</b>  <i>Kubitect with steam-run</i>"
    ""
    "<span color='gray'><i>Media Commands:</i></span>"
    "<b>🎬 media-video-1080p</b>  <i>Transcode video to 1080p [input_file]</i>"
    "<b>🎬 media-video-4k</b>  <i>Transcode video to 4K [input_file]</i>"
    "<b>🖼️ media-img-to-jpg</b>  <i>Convert image to JPG [input_file]</i>"
    "<b>🖼️ media-img-to-jpg-small</b>  <i>Convert image to small JPG [input_file]</i>"
    "<b>🖼️ media-img-to-png</b>  <i>Convert image to optimized PNG [input_file]</i>"
    ""
    "<span color='gray'><i>Common Aliases:</i></span>"
    "<b>☸️ k</b>  <i>kubectl</i>"
    "<b>🐙 g</b>  <i>git</i>"
    "<b>🐳 d</b>  <i>docker</i>"
    "<b>✏️ e</b>  <i>hx (helix editor)</i>"
    "<b>⚙️ t</b>  <i>talosctl</i>"
    "<b>🏗️ tf</b>  <i>terraform</i>"
    "<b>📋 ls</b>  <i>eza with icons</i>"
    "<b>✏️ vi / vim</b>  <i>hx (helix editor)</i>"
    "<b>📊 top / htop</b>  <i>btop</i>"
    "<b>❓ man</b>  <i>tldr</i>"
    "<b>📡 ping</b>  <i>gping</i>"
    "<b>📊 ps</b>  <i>procs</i>"
    ""
    "<span color='gray'><i>Legend:</i></span>"
    "<b>🔄</b> <i>System rebuild/update commands</i>"
    "<b>🔍</b> <i>Search/find commands</i>"
    "<b>📝</b> <i>Text/note commands</i>"
)

# Show rofi menu with fish commands using the main theme
rofi_theme="${XDG_CONFIG_HOME:-$HOME/.config}/rofi/launchers/type-2/style-2.rasi"
r_override="entry{placeholder:'🐠 Search Commands...';}listview{lines:20;columns:2;}window{width:80%;}"

CHOICE=$(printf '%s\n' "${COMMANDS[@]}" | rofi -dmenu -i -markup-rows -p "🐠 Fish Commands" -theme-str "$r_override" -theme "$rofi_theme")

# Extract command name from selection for clipboard copy
if [[ -n "$CHOICE" && "$CHOICE" != *"<span color='gray'>"* && "$CHOICE" != "" ]]; then
    # Extract command name between <b> tags, remove emoji indicator
    COMMAND=$(echo "$CHOICE" | sed -n 's/.*<b>[^ ]* *\([^<]*\)<\/b>.*/\1/p' | xargs)

    if [[ -n "$COMMAND" ]]; then
        # Copy command to clipboard
        echo "$COMMAND" | wl-copy --trim-newline

        # Show notification
        notify-send "🐠 Fish Command Copied" "$COMMAND copied to clipboard" -u low -t 2000 -i utilities-terminal --skip-summary
    fi
fi